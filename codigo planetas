import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: PlanetApp(),
    debugShowCheckedModeBanner: false, // Remove a faixa de debug
  ));
}

class Planet {
  String name;
  double distance;
  double size;
  String nickname;

  Planet({
    required this.name,
    required this.distance,
    required this.size,
    this.nickname = '',
  });
}

class PlanetApp extends StatefulWidget {
  @override
  _PlanetAppState createState() => _PlanetAppState();
}

class _PlanetAppState extends State<PlanetApp> {
  List<Planet> planets = [];

  void _addPlanet(Planet planet) {
    setState(() {
      planets.add(planet);
    });
  }

  void _editPlanet(int index, Planet planet) {
    setState(() {
      planets[index] = planet;
    });
  }

  void _deletePlanet(int index) {
    setState(() {
      planets.removeAt(index);
    });
  }

  void _showForm({Planet? planet, int? index}) {
    final nameController = TextEditingController(text: planet?.name ?? '');
    final distanceController =
        TextEditingController(text: planet?.distance.toString() ?? '');
    final sizeController =
        TextEditingController(text: planet?.size.toString() ?? '');
    final nicknameController =
        TextEditingController(text: planet?.nickname ?? '');

    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text(planet == null ? 'Adicionar Planeta' : 'Editar Planeta'),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              TextField(controller: nameController, decoration: InputDecoration(labelText: 'Nome')),
              TextField(controller: distanceController, decoration: InputDecoration(labelText: 'Distância do Sol'), keyboardType: TextInputType.number),
              TextField(controller: sizeController, decoration: InputDecoration(labelText: 'Tamanho (km)'), keyboardType: TextInputType.number),
              TextField(controller: nicknameController, decoration: InputDecoration(labelText: 'Apelido')),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () => Navigator.of(context).pop(),
              child: Text('Cancelar'),
            ),
            ElevatedButton(
              onPressed: () {
                final newPlanet = Planet(
                  name: nameController.text,
                  distance: double.tryParse(distanceController.text) ?? 0.0,
                  size: double.tryParse(sizeController.text) ?? 0.0,
                  nickname: nicknameController.text,
                );

                if (index == null) {
                  _addPlanet(newPlanet);
                } else {
                  _editPlanet(index, newPlanet);
                }
                Navigator.of(context).pop();
              },
              child: Text('Salvar'),
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Gerenciador de Planetas')),
      body: ListView.builder(
        itemCount: planets.length,
        itemBuilder: (context, index) {
          final planet = planets[index];
          return ListTile(
            title: Text(planet.name),
            subtitle: Text('Distância: ${planet.distance} UA | Tamanho: ${planet.size} km'),
            trailing: Row(
              mainAxisSize: MainAxisSize.min,
              children: [
                IconButton(icon: Icon(Icons.edit), onPressed: () => _showForm(planet: planet, index: index)),
                IconButton(icon: Icon(Icons.delete), onPressed: () => _deletePlanet(index)),
              ],
            ),
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () => _showForm(),
      ),
    );
  }
}
